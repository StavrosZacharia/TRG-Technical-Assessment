def PROJECT = "flask-hello-world"
def STAGE
def BUILD_NUMBER = env.BUILD_NUMBER


node(){
    try {

        stage("Checkout"){
            STAGE = env.STAGE_NAME
            cleanWs()
            checkout scm
        }

        stage("Dockerization") {
            sh"""
                docker build -t stazac/${PROJECT}:${BUILD_NUMBER} .
            """
        }

        stage("Push to DockerHub") {
            withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                sh """
                    echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin
                    docker tag stazac/${PROJECT}:${BUILD_NUMBER} stazac/${PROJECT}:latest
                    docker push stazac/${PROJECT}:latest
                    docker push stazac/${PROJECT}:${BUILD_NUMBER}
                    docker rmi stazac/${PROJECT}:${BUILD_NUMBER} stazac/${PROJECT}:latest || true
                """
            }
        }

        stage("Update Helm Chart") {
            withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                withCredentials([usernamePassword(credentialsId: 'helm-secret', passwordVariable: 'HELM_PASSWORD', usernameVariable: 'HELM_USERNAME')]) {
                    sh """
                        helm upgrade ${PROJECT} ./helm -n default --set image.repository=stazac/${PROJECT},image.tag=${BUILD_NUMBER}
                    """
                }
            }
        }

        stage("Update Kubernetes Deployment") {
            withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                withCredentials([usernamePassword(credentialsId: 'helm-secret', passwordVariable: 'HELM_PASSWORD', usernameVariable: 'HELM_USERNAME')]) {
                    sh """
                        kubectl rollout restart deployment/${PROJECT} -n default
                    """
                }
            }
        }

    } catch (Exception e) {
        println "Failed at stage:$STAGE"
        echo e.getMessage()
        currentBuild.result = "FAILURE"
    }
}
